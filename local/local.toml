[[sources]]
  name = "optimized"
  database = "local"
  namespace = "import"
  buffer  = 64

  [[sources.layers]]
    name      = "landuse"
    minzoom   = 10
    table     = "landuse_gen10"
    keys      = ["subclass", "area", "name"]
    [[sources.layers.variants]]
      minzoom = 11
      table   = "landuse_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "landuse_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "landuse_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "landuse_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "landuse"

  [[sources.layers]]
    name      = "landcover"
    minzoom   = 8
    table     = "landcover_gen8"
    keys      = ["class", "subclass", "area", "surface", "name"]
    [[sources.layers.variants]]
      minzoom = 9
      table   = "landcover_gen9"
    [[sources.layers.variants]]
      minzoom = 10
      table   = "landcover_gen10"
    [[sources.layers.variants]]
      minzoom = 11
      table   = "landcover_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "landcover_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "landcover_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "landcover_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "landcover"

  [[sources.layers]]
    name      = "roads"
    minzoom   = 8
    table     = "roads_gen8"
    keys      = [
      "class", 
      "subclass", 
      "oneway", 
      "tracktype", 
      "bridge", 
      "tunnel", 
      "service", 
      "CASE WHEN layer IS NULL THEN 0 ELSE layer END as layer", 
      "rank", 
      "bicycle", 
      "scale", 
      "substring(ref from '\\w+') as ref_prefix", 
      "substring(ref from '\\d+') as ref_num", 
      "NULL as name"]
    # [[sources.layers.variants]]
    #   minzoom = 9
    #   table   = "import.roads_gen9"
    [[sources.layers.variants]]
      minzoom = 10
      sql     = "select ST_AsMvtGeom(ST_LineMerge(ST_Collect(geometry)), !BBOX!, 4096, 128) as geom, class, subclass, oneway, tracktype, bridge, tunnel, service, case	when layer is null then 0	else layer end as layer, rank, bicycle,	scale, substring(ref from '\\w+') as ref_prefix, substring(ref from '\\d+') as ref_num, null as name from import.roads_gen10 WHERE (geometry && !BBOX!) GROUP BY ref, class, subclass, oneway, tracktype, bridge, tunnel, service, layer, rank,	bicycle, scale, ref_prefix, ref_num, name"
    [[sources.layers.variants]]
      minzoom = 11
      sql     = "select ST_AsMvtGeom(ST_LineMerge(ST_Collect(geometry)), !BBOX!, 4096, 128) as geom, class, subclass, oneway, tracktype, bridge, tunnel, service, case	when layer is null then 0	else layer end as layer, rank, bicycle,	scale, substring(ref from '\\w+') as ref_prefix, substring(ref from '\\d+') as ref_num, null as name from import.roads_gen11 WHERE (geometry && !BBOX!) GROUP BY ref, class, subclass, oneway, tracktype, bridge, tunnel, service, layer, rank,	bicycle, scale, ref_prefix, ref_num, name"
    [[sources.layers.variants]]
      minzoom = 12
      sql     = "select ST_AsMvtGeom(ST_LineMerge(ST_Collect(geometry)), !BBOX!, 4096, 128) as geom, class, subclass, oneway, tracktype, bridge, tunnel, service, case	when layer is null then 0	else layer end as layer, rank, bicycle,	scale, substring(ref from '\\w+') as ref_prefix, substring(ref from '\\d+') as ref_num, null as name from import.roads_gen12 WHERE (geometry && !BBOX!) GROUP BY ref, class, subclass, oneway, tracktype, bridge, tunnel, service, layer, rank,	bicycle, scale, ref_prefix, ref_num, name"
    [[sources.layers.variants]]
      minzoom = 13
      sql     = "select ST_AsMvtGeom(ST_LineMerge(ST_Collect(geometry)), !BBOX!, 4096, 128) as geom, class, subclass, oneway, tracktype, bridge, tunnel, service, case	when layer is null then 0	else layer end as layer, rank, bicycle,	scale, substring(ref from '\\w+') as ref_prefix, substring(ref from '\\d+') as ref_num, null as name from import.roads_gen13 WHERE (geometry && !BBOX!) GROUP BY ref, class, subclass, oneway, tracktype, bridge, tunnel, service, layer, rank,	bicycle, scale, ref_prefix, ref_num, name"
    [[sources.layers.variants]]
      minzoom = 14
      sql     = "select ST_AsMvtGeom(ST_LineMerge(ST_Collect(geometry)), !BBOX!, 4096, 128) as geom, class, subclass, oneway, tracktype, bridge, tunnel, service, case	when layer is null then 0	else layer end as layer, rank, bicycle,	scale, substring(ref from '\\w+') as ref_prefix, substring(ref from '\\d+') as ref_num, null as name from import.roads_gen14 WHERE (geometry && !BBOX!) GROUP BY ref, class, subclass, oneway, tracktype, bridge, tunnel, service, layer, rank,	bicycle, scale, ref_prefix, ref_num, name"
    [[sources.layers.variants]]
      minzoom = 15
      sql     = "select ST_AsMvtGeom(ST_LineMerge(ST_Collect(geometry)), !BBOX!, 4096, 128) as geom, class, subclass, oneway, tracktype, bridge, tunnel, service, case	when layer is null then 0	else layer end as layer, rank, bicycle,	scale, substring(ref from '\\w+') as ref_prefix, substring(ref from '\\d+') as ref_num, null as name from import.roads_gen15 WHERE (geometry && !BBOX!) GROUP BY ref, class, subclass, oneway, tracktype, bridge, tunnel, service, layer, rank,	bicycle, scale, ref_prefix, ref_num, name"
    [[sources.layers.variants]]
      minzoom = 16
      table   = "roads"
      keys      = [
        "class", 
        "subclass", 
        "oneway", 
        "tracktype", 
        "bridge", 
        "tunnel", 
        "service", 
        "CASE WHEN layer IS NULL THEN 0 ELSE layer END as layer", 
        "rank", 
        "bicycle", 
        "scale", 
        "substring(ref from '\\w+') as ref_prefix", 
        "substring(ref from '\\d+') as ref_num", 
        "name"]
      postfix = "ORDER BY rank DESC"


[[sources]]
  name = "local-slim"
  database = "local"
  buffer  = 0

  [[sources.layers]]
    name      = "landuse"
    minzoom   = 10
    table     = "import.landuse_gen10"
    keys      = ["subclass", "area", "name"]
    [[sources.layers.variants]]
      minzoom = 11
      table   = "import.landuse_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.landuse_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "import.landuse_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.landuse_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "import.landuse"

  [[sources.layers]]
    name      = "landcover"
    minzoom   = 8
    table     = "import.landcover_gen8"
    keys      = ["class", "subclass", "area", "surface", "name"]
    [[sources.layers.variants]]
      minzoom = 9
      table   = "import.landcover_gen9"
    [[sources.layers.variants]]
      minzoom = 10
      table   = "import.landcover_gen10"
    [[sources.layers.variants]]
      minzoom = 11
      table   = "import.landcover_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.landcover_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "import.landcover_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.landcover_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "import.landcover"

  [[sources.layers]]
    name      = "roads"
    minzoom   = 8
    table     = "import.roads_gen8"
    keys      = [
      "class", 
      "subclass", 
      "oneway", 
      "tracktype", 
      "bridge", 
      "tunnel", 
      "service", 
      "CASE WHEN layer IS NULL THEN 0 ELSE layer END as layer", 
      "rank", 
      "bicycle", 
      "scale", 
      "substring(ref from '\\w+') as ref_prefix", 
      "substring(ref from '\\d+') as ref_num", 
      "NULL as name"]
    # [[sources.layers.variants]]
    #   minzoom = 9
    #   table   = "import.roads_gen9"
    [[sources.layers.variants]]
      minzoom = 10
      table   = "import.roads_gen10"
    [[sources.layers.variants]]
      minzoom = 11
      table   = "import.roads_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.roads_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "import.roads_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.roads_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "import.roads_gen15"
    [[sources.layers.variants]]
      minzoom = 16
      table   = "import.roads"
      keys      = [
        "class", 
        "subclass", 
        "oneway", 
        "tracktype", 
        "bridge", 
        "tunnel", 
        "service", 
        "CASE WHEN layer IS NULL THEN 0 ELSE layer END as layer", 
        "rank", 
        "bicycle", 
        "scale", 
        "substring(ref from '\\w+') as ref_prefix", 
        "substring(ref from '\\d+') as ref_num", 
        "name"]
      postfix = "ORDER BY rank DESC"
#
#
#
#
#
#
#
#
#
#
#
#
[[sources]]
  name = "original"
  database = "local"
  buffer = 256

  [[sources.layers]]
    name      = "landuse"
    minzoom   = 10
    table     = "import.landuse_gen10"
    keys      = ["osm_id as id", "subclass", "area", "name"]
    [[sources.layers.variants]]
      minzoom = 11
      table   = "import.landuse_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.landuse_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "import.landuse_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.landuse_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "import.landuse"

  [[sources.layers]]
    name      = "landcover"
    minzoom   = 8
    table     = "import.landcover_gen8"
    keys      = ["osm_id as id", "class", "subclass", "area", "surface", "name"]
    [[sources.layers.variants]]
      minzoom = 9
      table   = "import.landcover_gen9"
    [[sources.layers.variants]]
      minzoom = 10
      table   = "import.landcover_gen10"
    [[sources.layers.variants]]
      minzoom = 11
      table   = "import.landcover_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.landcover_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "import.landcover_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.landcover_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "import.landcover"

  [[sources.layers]]
    name    = "waterway"
    minzoom = 8
    table   = "import.waterway_gen8"
    keys    = ["osm_id as id", "subclass", "tunnel", "layer", "name"]
    where   = ["subclass IN('river', 'canal')"]
    [[sources.layers.variants]]
      minzoom = 10
      table   = "import.waterway_gen10"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.waterway_gen12"
      where   = ["subclass IN('river', 'canal', 'stream')"]
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.waterway"
      keys    = ["osm_id as id", "subclass", "tunnel", "layer", "CASE WHEN (name_de <> '') IS NOT FALSE THEN name_de WHEN (name_en <> '') IS NOT FALSE THEN name_en ELSE name END as name"]      
      where   = []
      
  [[sources.layers]]
    name      = "waterarea"
    minzoom   = 8
    table     = "import.waterarea_gen8"
    keys      = ["osm_id as id"]
    [[sources.layers.variants]]
      minzoom = 9
      table   = "import.waterarea_gen9"
    [[sources.layers.variants]]
      minzoom = 10
      table   = "import.waterarea_gen10"
    [[sources.layers.variants]]
      minzoom = 11
      table   = "import.waterarea_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.waterarea_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "import.waterarea_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.waterarea_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "import.waterarea"

  [[sources.layers]]
    name      = "roads"
    minzoom   = 8
    table     = "import.roads_gen8"
    keys      = [
      "osm_id as id", 
      "class", 
      "subclass", 
      "oneway", 
      "tracktype", 
      "bridge", 
      "tunnel", 
      "service", 
      "CASE WHEN layer IS NULL THEN 0 ELSE layer END as layer", 
      "rank", 
      "bicycle", 
      "scale", 
      "substring(ref from '\\w+') as ref_prefix", 
      "substring(ref from '\\d+') as ref_num", 
      "NULL as name"]
    # [[sources.layers.variants]]
    #   minzoom = 9
    #   table   = "import.roads_gen9"
    [[sources.layers.variants]]
      minzoom = 10
      table   = "import.roads_gen10"
    [[sources.layers.variants]]
      minzoom = 11
      table   = "import.roads_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.roads_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "import.roads_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.roads_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "import.roads_gen15"
    [[sources.layers.variants]]
      minzoom = 16
      table   = "import.roads"
      keys      = [
        "osm_id as id", 
        "class", 
        "subclass", 
        "oneway", 
        "tracktype", 
        "bridge", 
        "tunnel", 
        "service", 
        "CASE WHEN layer IS NULL THEN 0 ELSE layer END as layer", 
        "rank", 
        "bicycle", 
        "scale", 
        "substring(ref from '\\w+') as ref_prefix", 
        "substring(ref from '\\d+') as ref_num", 
        "name"]
      postfix = "ORDER BY rank DESC"


  [[sources.layers]]
    minzoom   = 11
    name      = "cycleroute"
    sql       = "SELECT row_number() over () as gid, ref, name, ST_AsMvtGeom(ST_LineMerge(ST_Collect(geometry)), !BBOX!) AS geom from import.cycleroute where (geometry && !BBOX!) AND ST_GeometryType(geometry)='ST_LineString' group by ref, name order by ref desc NULLS last, name desc NULLS last"

  [[sources.layers]]
    minzoom   = 9
    name      = "railway"
    table     = "import.railway"
    keys      = ["id", "class", "subclass", "zorder", "bridge", "tunnel", "service"]
    where     = ["subclass NOT IN('subway', 'tram')", "(attraction <> '') IS NOT TRUE", "(service <> '') IS NOT TRUE"]
    [[sources.layers.variants]]
      minzoom   = 15
      where     = ["(attraction <> '') IS NOT TRUE"]

  [[sources.layers]]
    minzoom   = 10
    name      = "transportation"
    table     = "import.transportation"
    keys      = ["id", "class", "subclass", "CASE WHEN (name_de <> '') IS NOT FALSE THEN name_de WHEN (name_en <> '') IS NOT FALSE THEN name_en ELSE name END as name"]
    where     = ["NOT ST_IsClosed(geometry)"]


  [[sources.layers]]
    minzoom   = 10
    name      = "manmade"
    sql       = "select osm_id as id, ST_AsMvtGeom(geometry, !BBOX!) as geom, class, subclass, ST_Length(geometry)::integer as length, ST_IsClosed(geometry) as polygon from import.manmade_lines_gen13 WHERE (geometry && !BBOX!)"
    [[sources.layers.variants]]
      minzoom = 14
      sql       = """select osm_id as id, ST_AsMvtGeom(geometry, !BBOX!) as geom, class, subclass, ST_Length(geometry)::integer as length, ST_IsClosed(geometry) as polygon from import.manmade_lines WHERE (geometry && !BBOX!) 
                  UNION ALL
                  select osm_id as id, ST_AsMvtGeom(geometry, !BBOX!) as geom, class, subclass, ST_Perimeter(geometry)::integer as length, TRUE as polygon from import.manmade_polygons WHERE (geometry && !BBOX!) 
                  UNION ALL
                  select osm_id as id, ST_AsMvtGeom(geometry, !BBOX!) as geom, class, subclass, 0 as length, FALSE as polygon from import.manmade_points WHERE (geometry && !BBOX!)
                  """

  [[sources.layers]]
    minzoom   = 14
    name      = "piste"
    table     = "import.piste"
    keys      = ["id", "difficulty"]
    where     = ["NOT ST_IsClosed(geometry)"]

  [[sources.layers]]
    minzoom   = 14
    name      = "admin"
    table     = "import.admin"
    keys      = ["id", "ref", "level"]

  [[sources.layers]]
    minzoom   = 13
    maxzoom   = 15
    name      = "buildings-large"
    table     = "import.buildings_gen14"
    keys      = ["osm_id as id"]
    where     = ["ST_Area(geometry)>10000"]

  [[sources.layers]]
    minzoom   = 14
    name      = "buildings"
    table     = "import.buildings_gen14"
    keys      = ["osm_id as id"]
    [[sources.layers.variants]]
      minzoom = 15
      table   = "import.buildings"

  [[sources.layers]]
    minzoom   = 18
    name      = "housenumbers"
    table     = "import.housenumbers"
    keys      = ["osm_id as id", "number", "name"]

  [[sources.layers]]
    name      = "waterlabels"
    minzoom   = 8
    table     = "import.label_waterarea_gen8"
    keys      = ["osm_id as id", "subclass", "area", "ele", "name"]
    [[sources.layers.variants]]
      minzoom = 10
      table   = "import.label_waterarea_gen10"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.label_waterarea_gen12"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.label_waterarea_gen14"
    [[sources.layers.variants]]
      minzoom = 16
      table   = "import.label_waterarea"

  [[sources.layers]]
    minzoom   = 8
    name      = "label"
    table     = "import.label"
    prefix    = "DISTINCT ON(pop, name)"
    keys      = ["row_number() over (ORDER by pop desc NULLS LAST) as id", "class", "subclass", "name", "ele", "pop"]
    postfix   = "ORDER BY pop DESC NULLS LAST, name"

  [[sources.layers]]
    minzoom   = 11
    name      = "poi"
    table     = "import.poi_cluster_gen11"
    keys      = ["id", "count", "class", "subclass", "name", "ele", "access", "subway", "religion", "parking"]
    [[sources.layers.variants]]
      minzoom = 12
      table   = "import.poi_cluster_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "import.poi_cluster_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "import.poi_cluster_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "import.poi_cluster_gen15"
    [[sources.layers.variants]]
      minzoom = 16
      table   = "import.poi_cluster_gen16"
    [[sources.layers.variants]]
      minzoom = 17
      table   = "import.poi_cluster_gen17"
    [[sources.layers.variants]]
      minzoom = 18
      table   = "import.poi"
      keys    = ["osm_id as id", "1 as count", "class", "subclass", "name", "ele", "access", "subway", "religion", "parking"]
#
#
#
#
#
#
#
#
[[sources]]
  name = "local"
  database = "local"
  namespace = "import"

  [[sources.layers]]
    name      = "landuse"
    minzoom   = 10
    table     = "landuse_gen10"
    keys      = ["subclass", "area", "name"]
    [[sources.layers.variants]]
      minzoom = 11
      table   = "landuse_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "landuse_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "landuse_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "landuse_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "landuse"

  [[sources.layers]]
    name      = "landcover"
    minzoom   = 8
    table     = "landcover_gen8"
    keys      = ["class", "subclass", "area", "surface", "name"]
    [[sources.layers.variants]]
      minzoom = 9
      table   = "landcover_gen9"
    [[sources.layers.variants]]
      minzoom = 10
      table   = "landcover_gen10"
    [[sources.layers.variants]]
      minzoom = 11
      table   = "landcover_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "landcover_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "landcover_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "landcover_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "landcover"

  [[sources.layers]]
    name       = "waterway"
    minzoom    = 8
    table      = "waterway_gen8"
    geom_query = "ST_LineMerge(ST_Collect(!GEOM!))"
    postfix    = "GROUP BY subclass, tunnel, layer, name"
    keys       = ["subclass", "tunnel", "layer", "name"]
    where      = ["subclass IN('river', 'canal')"]
    [[sources.layers.variants]]
      minzoom = 10
      table   = "waterway_gen10"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "waterway_gen12"
      where   = ["subclass IN('river', 'canal', 'stream')"]
    [[sources.layers.variants]]
      minzoom = 14
      table   = "waterway"
      keys    = ["subclass", "tunnel", "layer", "CASE WHEN (name_de <> '') IS NOT FALSE THEN name_de WHEN (name_en <> '') IS NOT FALSE THEN name_en ELSE name END as name"]      
      postfix = "GROUP BY subclass, tunnel, layer, name, name_de, name_en"
      where   = []
      
  [[sources.layers]]
    name      = "waterarea"
    minzoom   = 8
    table     = "waterarea_gen8"
    keys      = []
    [[sources.layers.variants]]
      minzoom = 9
      table   = "waterarea_gen9"
    [[sources.layers.variants]]
      minzoom = 10
      table   = "waterarea_gen10"
    [[sources.layers.variants]]
      minzoom = 11
      table   = "waterarea_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "waterarea_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "waterarea_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "waterarea_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "waterarea"

  [[sources.layers]]
    name      = "roads"
    minzoom   = 8
    table     = "roads_gen8"
    geom_query = "ST_LineMerge(ST_Collect(!GEOM!))"
    postfix = "GROUP BY class, subclass, oneway, tracktype, bridge, tunnel, service, layer, rank, bicycle, scale, ref"
    keys      = [
      "class", 
      "subclass", 
      "oneway", 
      "tracktype", 
      "bridge", 
      "tunnel", 
      "service", 
      "CASE WHEN layer IS NULL THEN 0 ELSE layer END as layer", 
      "rank", 
      "bicycle", 
      "scale", 
      "substring(ref from '\\w+') as ref_prefix", 
      "substring(ref from '\\d+') as ref_num", 
      "NULL as name"]
    [[sources.layers.variants]]
      minzoom = 10
      table   = "roads_gen10"
    [[sources.layers.variants]]
      minzoom = 11
      table   = "roads_gen11"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "roads_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "roads_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "roads_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      buffer = 128
      table   = "roads_gen15"
    [[sources.layers.variants]]
      minzoom = 16
      table   = "roads"
      buffer = 256
      keys      = [
        "class", 
        "subclass", 
        "oneway", 
        "tracktype", 
        "bridge", 
        "tunnel", 
        "service", 
        "CASE WHEN layer IS NULL THEN 0 ELSE layer END as layer", 
        "rank", 
        "bicycle", 
        "scale", 
        "substring(ref from '\\w+') as ref_prefix", 
        "substring(ref from '\\d+') as ref_num", 
        "name"]
    postfix = "GROUP BY class, subclass, oneway, tracktype, bridge, tunnel, service, layer, rank, bicycle, scale, ref, name ORDER BY rank DESC"

  [[sources.layers]]
    minzoom   = 11
    name      = "cycleroute"
    sql       = "SELECT ref, name, ST_AsMvtGeom(ST_LineMerge(ST_Collect(geometry)), !BBOX!) AS geom from import.cycleroute where (geometry && !BBOX!) AND ST_GeometryType(geometry)='ST_LineString' group by ref, name order by ref desc NULLS last, name desc NULLS last"

  [[sources.layers]]
    minzoom    = 9
    name       = "railway"
    table      = "railway"
    geom_query = "ST_LineMerge(ST_Collect(!GEOM!))"
    keys       = ["class", "subclass", "zorder", "bridge", "tunnel", "service"]
    where      = ["subclass NOT IN('subway', 'tram')", "(attraction <> '') IS NOT TRUE", "(service <> '') IS NOT TRUE"]
    postfix    = "GROUP BY class, subclass, zorder, bridge, tunnel, service"
    [[sources.layers.variants]]
      minzoom   = 15
      where     = ["(attraction <> '') IS NOT TRUE"]

  [[sources.layers]]
    minzoom   = 10
    name      = "transportation"
    table     = "transportation"
    keys      = ["class", "subclass", "CASE WHEN (name_de <> '') IS NOT FALSE THEN name_de WHEN (name_en <> '') IS NOT FALSE THEN name_en ELSE name END as name"]
    where     = ["NOT ST_IsClosed(geometry)"]


  [[sources.layers]]
    minzoom   = 10
    name      = "manmade"
    sql       = "select ST_AsMvtGeom(geometry, !BBOX!, 4096, 64) as geom, class, subclass, ST_Length(geometry)::integer as length, ST_IsClosed(geometry) as polygon from import.manmade_lines_gen13 WHERE (geometry && !BBOX!)"
    [[sources.layers.variants]]
      minzoom = 14
      sql       = """select ST_AsMvtGeom(geometry, !BBOX!) as geom, class, subclass, ST_Length(geometry)::integer as length, ST_IsClosed(geometry) as polygon from import.manmade_lines WHERE (geometry && !BBOX!) 
                  UNION ALL
                  select ST_AsMvtGeom(geometry, !BBOX!) as geom, class, subclass, ST_Perimeter(geometry)::integer as length, TRUE as polygon from import.manmade_polygons WHERE (geometry && !BBOX!) 
                  UNION ALL
                  select ST_AsMvtGeom(geometry, !BBOX!) as geom, class, subclass, 0 as length, FALSE as polygon from import.manmade_points WHERE (geometry && !BBOX!)
                  """

  [[sources.layers]]
    minzoom   = 14
    name      = "piste"
    table     = "piste"
    keys      = ["difficulty"]
    where     = ["NOT ST_IsClosed(geometry)"]

  [[sources.layers]]
    minzoom   = 14
    name      = "admin"
    table     = "admin"
    keys      = ["ref", "level"]

  [[sources.layers]]
    minzoom   = 13
    maxzoom   = 15
    name      = "buildings-large"
    table     = "buildings_gen14"
    keys      = []
    where     = ["ST_Area(geometry)>10000"]

  [[sources.layers]]
    minzoom   = 14
    name      = "buildings"
    table     = "buildings_gen14"
    geom_query = "ST_Union(!GEOM!)"
    keys      = []
    [[sources.layers.variants]]
      minzoom = 15
      table   = "buildings"

  [[sources.layers]]
    minzoom   = 18
    name      = "housenumbers"
    table     = "housenumbers"
    keys      = ["number", "name"]

  [[sources.layers]]
    name      = "waterlabels"
    minzoom   = 8
    table     = "label_waterarea_gen8"
    keys      = ["subclass", "area", "ele", "name"]
    [[sources.layers.variants]]
      minzoom = 10
      table   = "label_waterarea_gen10"
    [[sources.layers.variants]]
      minzoom = 12
      table   = "label_waterarea_gen12"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "label_waterarea_gen14"
    [[sources.layers.variants]]
      minzoom = 16
      table   = "label_waterarea"

  [[sources.layers]]
    minzoom   = 8
    name      = "label"
    table     = "label"
    prefix    = "DISTINCT ON(pop, name)"
    keys      = ["class", "subclass", "name", "ele", "pop"]
    postfix   = "ORDER BY pop DESC NULLS LAST, name"

  [[sources.layers]]
    minzoom   = 11
    name      = "poi"
    table     = "poi_cluster_gen11"
    keys      = ["count", "class", "subclass", "name", "ele", "access", "subway", "religion", "parking"]
    [[sources.layers.variants]]
      minzoom = 12
      table   = "poi_cluster_gen12"
    [[sources.layers.variants]]
      minzoom = 13
      table   = "poi_cluster_gen13"
    [[sources.layers.variants]]
      minzoom = 14
      table   = "poi_cluster_gen14"
    [[sources.layers.variants]]
      minzoom = 15
      table   = "poi_cluster_gen15"
    [[sources.layers.variants]]
      minzoom = 16
      table   = "poi_cluster_gen16"
    [[sources.layers.variants]]
      minzoom = 17
      table   = "poi_cluster_gen17"
    [[sources.layers.variants]]
      minzoom = 18
      table   = "poi"
      keys    = ["1 as count", "class", "subclass", "name", "ele", "access", "subway", "religion", "parking"]

